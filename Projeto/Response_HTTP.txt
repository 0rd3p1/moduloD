200 -> OK

Sucessa na operação feita

404 -> Not Found

Não existe a rota escrita

Exemplo:

<?php
$usuarios = [1 => ["id" => 1, "nome" => "Maria"]];
$id = $_GET['id'] ?? null;

if ($id && isset($usuarios[$id])) {
    header("Content-Type: application/json");
    header("HTTP/1.1 200 OK");
    echo json_encode($usuarios[$id]);
} else {
    header("HTTP/1.1 404 Not Found");
    echo json_encode(["erro" => "Usuário não encontrado"]);
}
___________________________________________________________________________________

201 - Created

Foi criado algo novo com sucesso

400 - Bad Resquest

Erro de sintaxe na execução da operação

Exemplo:

<?php
$dados = json_decode(file_get_contents("php://input"), true);
if (isset($dados["nome"]) && is_string($dados["nome"])) {
    $novoId = rand(100, 999); // Simulando ID gerado
    header("HTTP/1.1 201 Created");
    header("Location: /api/usuarios/$novoId");
    echo json_encode(["id" => $novoId, "nome" => $dados["nome"]]);
} else {
    header("HTTP/1.1 400 Bad Request");
    echo json_encode(["erro" => "Nome é obrigatório e deve ser uma string"]);
}
___________________________________________________________________________________

500 Internal Server Error

Ocorreu um erro inesperado no servidor ao executar a operação

Exemplo:

<?php
try {
    // Simulando erro
    throw new Exception("Erro inesperado!");
} catch (Exception $e) {
    header("HTTP/1.1 500 Internal Server Error");
    echo json_encode(["erro" => "Erro interno: " . $e->getMessage()]);
}
___________________________________________________________________________________

409 - Conflict

Recurso já existente na operação

Exemplo:

<?php
$input = json_decode(file_get_contents("php://input"), true);
$email = $input["email"] ?? null;

if ($email === "teste@exemplo.com") {
    header("HTTP/1.1 409 Conflict");
    echo json_encode(["erro" => "Email já cadastrado"]);
}
___________________________________________________________________________________

403 - Forbidden

Não tem permissão para acessar esta rota

Exemplo:

<?php
$usuario = ["id" => 2, "perfil" => "usuario"];
if ($usuario["perfil"] !== "admin") {
    header("HTTP/1.1 403 Forbidden");
    echo json_encode(["erro" => "Você não tem permissão para acessar este recurso"]);
} else {
    echo json_encode(["mensagem" => "Acesso permitido"]);
}
___________________________________________________________________________________

401 - Unauthorized

Não teve autenticação para acessar esta rota

Exemplo:

<?php
$auth = $_SERVER['HTTP_AUTHORIZATION'] ?? null;
if (!$auth || $auth !== "Bearer token123") {
    header("HTTP/1.1 401 Unauthorized");
    header("WWW-Authenticate: Bearer");
    echo json_encode(["erro" => "Token inválido ou ausente"]);
}
___________________________________________________________________________________

301 - Moved Permanently

O recurso foi movido permanentemente para outra rota

Exemplo:

<?php
header("HTTP/1.1 301 Moved Permanently");
header("Location: /nova-api-endpoint");
exit;
___________________________________________________________________________________

204 - No Content

Não houve saída na operação

Exemplo:

$id = $_GET['id'] ?? null;
if ($id) {
    // Supondo que o usuário foi deletado com sucesso
    header("HTTP/1.1 204 No Content");
    exit;
}